name: Test

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: doanhluong
          POSTGRES_PASSWORD: doanhluong123
          POSTGRES_DB: ecom_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3.1.0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      # Allow debugging with tmate
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
        with:
          limit-access-to-actor: true
      - uses: actions/cache@v2
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-root
      - name: Install poetry
        if: steps.cache.outputs.cache-hit != 'true'
        # TODO: remove python -m pip install --force git+https://github.com/python-poetry/poetry-core.git@ad33bc2
        # once there's a release of Poetry 1.2.x including poetry-core > 1.1.0a6
        # Ref: https://github.com/python-poetry/poetry-core/pull/188
        run: |
          python -m pip install --upgrade pip
          python -m pip install --force git+https://github.com/python-poetry/poetry-core.git@ad33bc2
          python -m pip install "poetry"
          python -m poetry plugin add poetry-version-plugin
      - name: Configure poetry
        run: python -m poetry config virtualenvs.create false
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: python -m poetry install
      - name: Lint
        run: python -m poetry run bash scripts/lint.sh
      - name: Test with pytest
        run: |
          # python3 -m pytest -s --durations=0 . # https://stackoverflow.com/a/55095253
          python3 -m pytest -s --durations=0 --cov=./ --cov-report=xml
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          files: ./coverage.xml
          directory: ./coverage/reports/
          flags: pytest
          env_vars: OS,PYTHON
          name: codecov-umbrella
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true
